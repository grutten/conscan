<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
	  <groupId>com.tippingpoint</groupId>
	  <artifactId>app</artifactId>
	  <version>1.0-SNAPSHOT</version>
	</parent> 
	<modelVersion>4.0.0</modelVersion>
	<artifactId>conscan</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils-core</artifactId>
			<version>1.8.3</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>4.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.servicemix.specs</groupId>
			<artifactId>
  			org.apache.servicemix.specs.jsr311-api-1.1.1
  		</artifactId>
			<version>1.8.0</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.0.8</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>servlet-api</artifactId>
			<version>6.0.32</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>1.2.4</version>
		</dependency>
	  	<!--  JNLP dependencies -->
	  	<dependency>
	  		<groupId>org.apache.httpcomponents</groupId>
	  		<artifactId>httpmime</artifactId>
	  		<version>4.1.1</version>
	  	</dependency>
	  	<dependency>
	  		<groupId>org.apache.httpcomponents</groupId>
	  		<artifactId>httpcore</artifactId>
	  		<version>4.1</version>
	  	</dependency>
	  	<dependency>
	  		<groupId>org.apache.httpcomponents</groupId>
	  		<artifactId>httpclient</artifactId>
	  		<version>4.1.1</version>
	  	</dependency>
	  	<dependency>
	  		<groupId>com.tippingpoint</groupId>
	  		<artifactId>client</artifactId>
	  		<version>0.0.1-SNAPSHOT</version>
	  	</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
			  <groupId>org.codehaus.mojo.webstart</groupId>
			  <artifactId>webstart-maven-plugin</artifactId>
			  <version>1.0-beta-2</version>
			  <executions>
			    <execution>
			      <goals>
			        <goal>jnlp</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
			      </goals>
			    </execution>
			  </executions>
			  <configuration>
			<outputDirectory>jnlp</outputDirectory>
			
			    <!--
			    Set to true to exclude all transitive dependencies. Default is false.
			    -->
			    <excludeTransitive>false</excludeTransitive>
			
			    <!-- The path where the libraries are stored within the jnlp structure. not required. by default the libraries are within the working directory -->
			    <!--   <libPath>lib</libPath>   -->
			
			    <!-- [optional] transitive dependencies filter - if omitted, all transitive dependencies are included -->
			    <dependencies>
			      <!-- Note that only groupId and artifactId must be specified here. because of a limitation of the Include/ExcludesArtifactFilter -->
			      <includes>
			        <include>commons-logging:commons-logging</include>
			        <include>org.apache.httpcomponents:httpmime</include>
			        <include>org.apache.httpcomponents:httpcore</include>
			        <include>org.apache.httpcomponents:httpclient</include>
			        <include>com.tippingpoint:client</include>
			      </includes>
			      <!-- excludes>
			        <exclude></exclude>
			      <excludes-->
			    </dependencies>
			
			    <!--resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory--> <!-- default value -->
			
			    <!-- JNLP generation -->
			    <jnlp>
			      <!-- default values -->
			      <inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath>
			      <inputTemplate>src/main/resources/jnlp/scannerOptions.vm</inputTemplate> <!-- relative to inputTemplateResourcePath -->
			      <outputFile>scannerOptions2.jnlp</outputFile> <!-- defaults to launch.jnlp -->
			
			      <!-- used to automatically identify the jar containing the main class. -->
			      <!-- this is perhaps going to change -->
			      <mainClass>com.tippingpoint.scannerOptions</mainClass>
			    </jnlp>
			
			
			    <!-- SIGNING -->
			    <!-- defining this will automatically sign the jar and its dependencies, if necessary -->
			    <sign>
			      <keystore>clientkeystore</keystore>
			      <keypass>1asdfasdf</keypass>  <!-- we need to override passwords easily from the command line. ${keypass} -->
			      <storepass>1asdfasdf</storepass> <!-- ${storepass} -->
			      <!--storetype>fillme</storetype-->
			      <alias>conscan</alias>
			
			      <!--validity>fillme</validity-->
			
			      <verify>true</verify> <!-- verify that the signing operation succeeded -->
			
			      <!-- KEYSTORE MANAGEMENT -->
			      <keystoreConfig>
			        <delete>false</delete> <!-- delete the keystore -->
			        <gen>false</gen>       <!-- optional shortcut to generate the store. -->
			      </keystoreConfig>
			    </sign>
			
			    <!-- BUILDING PROCESS -->
			
			    <pack200>true</pack200>
			    <gzip>false</gzip> <!-- default force when pack200 false, true when pack200 selected ?? -->
			
			    <!-- causes a version attribute to be output in each jar resource element, optional, default is false -->
			    <outputJarVersions>true</outputJarVersions>
			
			    <!--install>false</install--> <!-- not yet supported -->
			    <verbose>true</verbose>
			
			  </configuration>
			</plugin>
    	</plugins>
	</build>
</project>