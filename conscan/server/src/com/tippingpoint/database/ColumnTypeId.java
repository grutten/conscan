package com.tippingpoint.database;

import com.tippingpoint.sql.ConnectionManagerFactory;

/**
 * This class represents a column type of ID.
 */
public class ColumnTypeId extends ColumnTypeIdBase {
	public static final String TYPE = "id";

	/**
	 * This method constructs a new column type.
	 */
	protected ColumnTypeId() {
		super(TYPE);
	}

	/**
	 * This method returns if the value is derived based on the database.
	 */
	@Override
	public boolean idDerived() {
		return ConnectionManagerFactory.getFactory().getDefaultManager().getIdFactory().idDerived();
	}

	/**
	 * This method returns if the type dictates if the value is required when the column is required. Values not
	 * required when the column type indicates that the column is specified are values generated by the database (i.e.
	 * auto increment id columns).
	 */
	@Override
	public boolean isValueRequired(final boolean bColumnRequired) {
		return ConnectionManagerFactory.getFactory().getDefaultManager().getIdFactory()
				.isValueRequired(bColumnRequired);
	}

	/**
	 * This method gives a changes for the type to set any restrictions on the column type.
	 * 
	 * @param columnDefinition ColumnDefinition being defined by this type.
	 */
	@Override
	public void setRestrictions(final ColumnDefinition columnDefinition) {
		super.setRestrictions(columnDefinition);
		
		// all id columns are required in the database
		columnDefinition.setRequired(true);
	}
}
